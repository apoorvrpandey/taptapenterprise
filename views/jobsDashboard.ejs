<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Jobs Dashboard</title>
    <link rel="icon" type="image/x-icon" href="img/sidebar logo.png" />
    <link rel="stylesheet" href="css/job_dashboard.css"> <!-- Linking to external CSS file -->
    <link rel="stylesheet" href="css/nav_log.css">
    <link rel="stylesheet" href="css/sidebar.css">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <script src="js/job_insights.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/jwt-decode/build/jwt-decode.min.js"></script>
    <link rel="shortcut icon" href="img/sidebar logo.png" type="image/x-icon">
    <style>
        #noDataMessage {
            display: none;
            border: 1px solid rgba(0, 0, 0, 0.7);
            border-radius: 10px;
            padding: 20px;
            position: relative;
            text-align: center;
            font-size: 14px;
            color: rgba(0, 0, 0, 0.7);
        }

        .job-card {
            font-family: Arial, sans-serif;
            background-color: #fff;
            border: 1px solid #ddd;
            border-radius: 20px;
            padding: 10px;
            width: 30%;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

        }

        .nodata {

            border: 1px solid rgba(0, 0, 0, 0.7);
            border-radius: 10px;
            padding: 10px;
            position: relative;
            text-align: center;
            font-size: 12px;
            color: rgba(0, 0, 0, 0.7);
            margin: 10px;
        }

        .roww {
            display: flex;
            flex-direction: row;
            align-items: center;
        }

        .marginr {
            margin-right: 10px;
        }

        .grey {
            color: rgba(0, 0, 0, 0.7);
        }

        .f14 {
            font-size: 14px;
        }
    </style>

</head>

<body>
    <script>
        window.userRole = "<%= user.role %>";
      </script>
      <script src="js/rolebase.js"></script>
      
      
    <div class="supercss">

        <div class="sidebar">
            <a class="logo" style="text-align: center;align-items:center;padding:5px">
                <img src="img/sidebar logo.png" alt="Logo" style="width: 58px; max-width: 70px;height:80px;">
            </a>
            <a href="myDashboard" class="menu-item" id="dashboard-link">
                <img src="img/dash_white.png" alt="dash" style="max-width:22px; height:22px"><span
                    style="color:white">Dashboard</span>
            </a>
            <a href="employabilityReport" class="menu-item">
                <img src="img/emp.png" alt="dash" style="max-width:18px; height:20px"><span>Employbility</span>
            </a>
            <a href="https://admin.hackathon.blackbucks.me" class="menu-item">
                <img alt="Assessment icon" src="img/assessment.png" style="max-width:19px; height:19.5px">
                <span>Assessments</span></a>

            <a href="jobsDashboard" class="menu-item" style="background-color: #88EB4C;">
                <img src="img/jobs_black.png" alt="jobs" style="max-width:20px; height:21px"><span
                    style="color:black;font-weight:bold">Jobs</span>
            </a>
            <a href="https://admin.hackathon.blackbucks.me/createAndManageCourse/" class="menu-item">
                <img alt="course icon" src="img/course.png" style="max-width:19px; height:20px">
                <span>Course</span></a>
            <a href="https://admin.hackathon.blackbucks.me/lessonPlan/" class="menu-item">
                <img alt="lessonplan icon" src="img/lessonplan.png" style="max-width:23px; height:18px">
                <span>Lesson Plan</span></a>

            <a href="trainingsDashboard" class="menu-item">
                <img src="img/trainings.png" alt="trainings" style="max-width:27px; height:21px"><span>Trainings</span>
            </a>
            <a href="internshipsDashboard" class="menu-item">
                <img src="img/internship_whiteicon.png" alt="manage"
                    style="width: 20px; height: auto" /><span>Internships</span>
            </a>
            <a href="https://admin.hackathon.blackbucks.me/createAndManageLabTest/" class="menu-item">
                <img alt="vpl icon" src="img/vpl.png" style="max-width:19px; height:17px">
                <span>VPL</span></a>




        </div>

        <div class="css">
            <div class="css0">
                <div class="navbar">
                    <div class="nav1"></div>
                    <div class="nav2">
                        <a href="https://admin.hackathon.blackbucks.me/manageStudents/">
                            <div class="chakra-stack css-nr8aow">
                                <img alt="Manage Users" src="img/newManageUsers.svg" class="chakra-image css-0">
                            </div>
                        </a>
                        <a href="https://admin.hackathon.blackbucks.me/tpCalendar/" style="margin-left: 1rem;">
                            <div class="chakra-stack css-nr8aow">
                                <img alt="Calendar" src="img/newCalenderNavIcon.svg" class="chakra-image css-0">
                            </div>
                        </a>
                        <a href="https://admin.hackathon.blackbucks.me/manageNotification/" style="margin-left: 1rem;">
                            <div class="chakra-stack css-nr8aow">
                                <div class="css-1edim3w">
                                    <img alt="Notifications" src="img/newNotificationIcon.svg"
                                        class="chakra-image css-6su6fj">
                                    <div class="css-1bac456">
                                        <div class="css-1rkwksi">1</div>
                                    </div>
                                </div>
                            </div>
                        </a>
                        <button type="button" class="navbtn" id="userButton">
                            <span class="user-details">
                                <div class="user">
                                    <span class="user-profile">
                                        <i class="fa-solid fa-circle-user" style="font-size: 30px;"></i>
                                    </span>
                                    <div class="username">
                                        <p class="userN"></p>
                                        <p class="userR"></p>
                                    </div>
                                </div>
                            </span>
                            <span class="chakra-button__icon css-1hzyiq5">
                                <svg viewBox="0 0 16 16" style="height:12px !important; width: 12px !important;"
                                    aria-hidden="true" focusable="false" fill="currentColor"
                                    xmlns="http://www.w3.org/2000/svg" color="black" class="css-1eamic5 ex0cdmw0">
                                    <path fill-rule="evenodd"
                                        d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z">
                                    </path>
                                </svg>
                            </span>
                        </button>

                        <button type="button" class="logoutbtn" id="logoutButton" style="display: none;">
                            Log out
                        </button>


                    </div>

                    <script>
                        document.addEventListener('DOMContentLoaded', () => {
                            const userButton = document.getElementById('userButton');
                            const logoutButton = document.getElementById('logoutButton');

                            userButton.addEventListener('click', () => {
                                if (logoutButton.style.display === 'none') {
                                    logoutButton.style.display = 'flex';
                                    logoutButton.style.top = `${userButton.offsetTop + userButton.offsetHeight}px`;
                                    logoutButton.style.left = `${userButton.offsetLeft}px`;
                                } else {
                                    logoutButton.style.display = 'none';
                                }
                            });

                            logoutButton.addEventListener('click', () => {
                                // Add your logout logic here
                                console.log('User logged out');
                            });
                        });

                    </script>
                </div>
            </div>
            <div class="css1">
                <div class="main-container">
                    <div class="heading" style="display: flex;justify-content: space-between">
                        <div class="roww marginr" style="padding-left: 35px;">
                            <img src="img/jobsgrey.png" alt="internship icon"
                                style="width: 14px; height: 14px; margin-right: 5px" />
                            <p class="grey f14 marginr">
                                Jobs Dashboard
                            </p>
                        </div>
                        <div style="display:flex">
                            <a href="https://admin.hackathon.blackbucks.me/metLeaderboard/"><button
                                    class="create shortlisted-students-btn"
                                    style="cursor:pointer;margin-right: 30px;">Shortlist Students</button></a>
                            <a href="https://admin.hackathon.blackbucks.me/createJobPost/"><button class="create"
                                    style="cursor:pointer;margin-right: 30px;">Create Job Post</button></a>
                            <a href="https://admin.hackathon.blackbucks.me/createAndManageJobPost/"><button
                                    class="create" style="cursor:pointer;margin-right: 30px;">Manage Job
                                    Post</button></a>
                        </div>
                    </div>
                    <div class="container">

                        <div class="section1">

                            <div class="left-half">
                                <div class="left-frame">
                                    <div style="background-color: #7962bd;" class="section1card">
                                        <p
                                            style="color: white;font-size: 16px;font-weight: bold;align-items: center;justify-content: center;text-align: center;">
                                            <br> Ready to post a job?
                                        </p>
                                        <a href="https://admin.hackathon.blackbucks.me/createJobPost/"
                                            style="text-decoration:none">
                                            <p
                                                style="display: flex;color: white;font-size: 14px;font-weight: bold;padding-top: 20px;text-align: center;align-items: center;justify-content: center;">
                                                Post a Job Now<span><i class="fa-solid fa-chevron-right"
                                                        style="padding-left: 5px;"></i></span></p>
                                        </a>
                                    </div>

                                    <div class="section4card">
                                        <div
                                            style="display: flex;flex-direction: row;align-items: center; justify-content: center;padding-top: 40px;">
                                            <div><img src="img/placed.png" alt="placed students"
                                                    style="padding-right: 10px;"></div>
                                            <div><strong style="padding: 0;margin: 0;font-size: 14px">No Data
                                                    Available</strong>
                                                <p style="padding: 0;margin: 0; font-size: 12px;">Students Placed</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="right-frame">
                                    <div class="section2card" style="width: 100%;">
                                        <div>
                                            <img src="img/job.png" alt="placed students"
                                                style="width: 50px; height: 50px;">
                                        </div>
                                        <div>
                                            <strong style="margin:0;padding:0;font-size: 22px;font-weight: bold;"><span
                                                    id="total-job-posts" style="color: #000000;"></span></strong>
                                        </div><br>
                                        <div>
                                            <p style="font-size: 12px;margin:0;padding:0">Jobs Posted</p>
                                        </div>
                                    </div>

                                    <div class="section3card" style="width: 100%;">
                                        <div>
                                            <img src="img/apply.png" alt="placed students"
                                                style="width: 50px; height: 50px;">
                                        </div>
                                        <div>
                                            <strong style="margin:0;padding:0;font-size: 22px;font-weight: bold;"><span
                                                    id="average-job-applications-per-post"
                                                    style="color: #000000;"></span></strong>
                                        </div><br>
                                        <div>
                                            <p style="font-size: 12px;margin:0;padding:0">Avg. Applications</p>
                                        </div>
                                    </div>

                                    <div class="section3card" style="width: 100%;">
                                        <div>
                                            <img src="img/job.png" alt="placed students"
                                                style="width: 50px; height: 50px;">
                                        </div>
                                        <div>
                                            <strong style="margin:0;padding:0;font-size: 22px;font-weight: bold;"><span
                                                    id="appliedcount" style="color: #000000;"></span></strong>
                                        </div><br>
                                        <div>
                                            <p style="font-size: 12px;margin:0;padding:0">Job Applications</p>
                                        </div>
                                    </div>

                                    <div class="section3card" style="width: 100%;">
                                        <div>
                                            <img src="img/apply.png" alt="placed students"
                                                style="width: 50px; height: 50px;">
                                        </div>
                                        <div>
                                            <strong style="margin:0;padding:0;font-size: 22px;font-weight: bold;"><span
                                                    id="" style="color: #000000;">0</span></strong>
                                        </div><br>
                                        <div>
                                            <p style="font-size: 12px;margin:0;padding:0">Shortlisting Percentage</p>
                                        </div>
                                    </div>
                                </div>

                            </div>

                            <div class="Right-half">
                                <canvas id="jobChart" width="600" height="300"></canvas>
                                <div id="noDataMessage" style="display: none;">No job applications have been submitted
                                    by students from this college.</div>
                            </div>
                        </div>
                    </div>

                    <div style="padding-left: 20px;padding-right: 20px;"><button class="create "  style="width: 250px;">
                        <a href="bbjobs">View all jobs listed by blackbucks</a></button>
                    <div id="blackbucks-jobs-container" style="margin-top:10px;display: none; ">
                        <div id="bb-jobs" style="display: flex ; flex-wrap: wrap; column-gap: 10px; row-gap:10px;">
                        </div>
                    </div></div>


                    <h2 style="margin-top: 20px;padding-left:30px;color: #1B1212;">Jobs Posted to the Students</h2>

                    <!--Multiselect-->
                    <div class="filters">
                        <div class="filter-group">
                            <div class="label-card" onclick="toggleVisibility('drive-type-filter')">
                                <label for="drive-type-filter">Drive Type</label>
                                <div class="down-arrow"></div>
                            </div>

                            <div id="drive-type-filter" class="dropdown-content">
                                <input type="text" id="drive-type-search" class="filter-search"
                                    placeholder="Search Drive Types"><br>
                                <div class="clear-all" onclick="clearAllCheckboxes('drive-type-filter')">Clear All</div>
                            </div>
                        </div>
                        <div class="filter-group">
                            <div class="label-card" onclick="toggleVisibility('salary-range-filter')">
                                <label for="salary-range-filter">Salary Range</label>
                                <div class="down-arrow"></div>
                            </div>

                            <div id="salary-range-filter" class="dropdown-content">
                                <input type="text" id="salary-range-search" class="filter-search"
                                    placeholder="Search Salary Ranges"><br>
                                <div class="clear-all" onclick="clearAllCheckboxes('salary-range-filter')">Clear All
                                </div>
                            </div>
                        </div>
                        <div class="filter-group">
                            <div class="label-card" onclick="toggleVisibility('employment-type-filter')">
                                <label for="employment-type-filter">Employment Type</label>
                                <div class="down-arrow"></div>
                            </div>

                            <div id="employment-type-filter" class="dropdown-content">
                                <input type="text" id="employment-type-search" class="filter-search"
                                    placeholder="Search Employment Types"><br>
                                <div class="clear-all" onclick="clearAllCheckboxes('employment-type-filter')">Clear All
                                </div>
                            </div>
                        </div>
                        <div class="filter-group">
                            <div class="label-card" onclick="toggleVisibility('company-filter')">
                                <label for="company-filter">Company</label>
                                <div class="down-arrow"></div>
                            </div>

                            <div id="company-filter" class="dropdown-content">
                                <input type="text" id="company-search" class="filter-search"
                                    placeholder="Search Companies"><br>
                                <div class="clear-all" onclick="clearAllCheckboxes('company-filter')">Clear All</div>
                            </div>
                        </div>

                    </div>

                    <!-- Job Container -->
                    <div class="jobcontainer">
                        <div class="card job-listing" id="job-posts-container" style="height: 95vh;">
                            <!-- Dynamically generated job posts will appear here -->
                        </div>
                        <div class="card job-description">
                            <h2>Welcome!</h2>
                            <p>Click on a job to see more details here.</p>
                        </div>
                    </div>

                    <script>
                        document.addEventListener('DOMContentLoaded', () => {
                            fetch('/api/filter_jobs/all_data')
                                .then(response => response.json())
                                .then(data => {
                                    const driveTypeFilter = document.getElementById('drive-type-filter');
                                    const salaryRangeFilter = document.getElementById('salary-range-filter');
                                    const employmentTypeFilter = document.getElementById('employment-type-filter');
                                    const companyFilter = document.getElementById('company-filter');

                                    addCheckboxWithLimit(data.driveTypes, driveTypeFilter);
                                    addCheckboxWithLimit(data.package, salaryRangeFilter);
                                    addCheckboxWithLimit(data.employmentTypes, employmentTypeFilter);
                                    addCheckboxWithLimit(data.companies, companyFilter);

                                    fetchData();

                                    // Add search functionality
                                    addSearchFunctionality('drive-type-search', driveTypeFilter);
                                    addSearchFunctionality('salary-range-search', salaryRangeFilter);
                                    addSearchFunctionality('employment-type-search', employmentTypeFilter);
                                    addSearchFunctionality('company-search', companyFilter);
                                })
                                .catch(error => {
                                    console.error('Error fetching filter options:', error);
                                });

                            function fetchData() {
                                const driveTypeCheckboxes = document.querySelectorAll('#drive-type-filter input[type="checkbox"]:checked');
                                const salaryRangeCheckboxes = document.querySelectorAll('#salary-range-filter input[type="checkbox"]:checked');
                                const employmentTypeCheckboxes = document.querySelectorAll('#employment-type-filter input[type="checkbox"]:checked');
                                const companyCheckboxes = document.querySelectorAll('#company-filter input[type="checkbox"]:checked');

                                const driveTypes = Array.from(driveTypeCheckboxes).map(checkbox => checkbox.value);
                                const salaryRanges = Array.from(salaryRangeCheckboxes).map(checkbox => checkbox.value);
                                const employmentTypes = Array.from(employmentTypeCheckboxes).map(checkbox => checkbox.value);
                                const companies = Array.from(companyCheckboxes).map(checkbox => checkbox.value);

                                const queryParams = new URLSearchParams();
                                if (driveTypes.length > 0) queryParams.append('driveTypes', driveTypes.join(','));
                                if (salaryRanges.length > 0) queryParams.append('salaryRanges', salaryRanges.join(','));
                                if (employmentTypes.length > 0) queryParams.append('employmentTypes', employmentTypes.join(','));
                                if (companies.length > 0) queryParams.append('companies', companies.join(','));

                                fetch(`/api/job_posts/job_posts?${queryParams.toString()}`)
                                    .then(response => response.json())

                                    .then(data => {
                                        const jobPostsContainer = document.getElementById('job-posts-container');
                                        // jobPostsContainer.innerHTML = '';


                                        if (data.length > 0) {

                                            data.forEach(jobPost => {
                                                const jobPostElement = createJobPostElement(jobPost);
                                                jobPostsContainer.appendChild(jobPostElement);
                                            });

                                            // Automatically display the first job description and add active class
                                            const firstJobPost = data[0];
                                            document.querySelector('.job').classList.add('active');
                                            updateJobDescription(firstJobPost.job_post_id, firstJobPost.job_post_title, firstJobPost.company_title, firstJobPost.description);
                                        } else {
                                            jobPostsContainer.innerHTML = '<p class="nodata">No job applications have been submitted by students from this college.</p>';
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error fetching data:', error);
                                        const jobPostsContainer = document.getElementById('job-posts-container');
                                        jobPostsContainer.innerHTML = '<p>Error fetching data. Please try again later.</p>';
                                    });
                            }

                            function createCheckbox(option) {
                                const checkbox = document.createElement('input');
                                checkbox.type = 'checkbox';
                                checkbox.value = option;
                                const label = document.createElement('label');
                                label.textContent = option;
                                const div = document.createElement('div');
                                div.appendChild(checkbox);
                                div.appendChild(label);
                                return div;
                            }

                            function addCheckboxWithLimit(options, filterContainer) {
                                const limit = 5;
                                options.slice(0, limit).forEach(option => {
                                    const checkbox = createCheckbox(option);
                                    checkbox.addEventListener('change', fetchData);
                                    filterContainer.appendChild(checkbox);
                                });

                                if (options.length > limit) {
                                    const showMoreButton = document.createElement('div');
                                    showMoreButton.classList.add('show-more');
                                    showMoreButton.textContent = 'Show More';
                                    showMoreButton.addEventListener('click', function () {
                                        options.slice(limit).forEach(option => {
                                            const checkbox = createCheckbox(option);
                                            checkbox.addEventListener('change', fetchData);
                                            filterContainer.appendChild(checkbox);
                                        });
                                        showMoreButton.style.display = 'none';
                                    });
                                    filterContainer.appendChild(showMoreButton);
                                }
                            }

                            fetch('/api/job_posts/job_posts')
                                .then(response => response.json())
                                .then(data => {

                                    const jobContainer = document.getElementById("bb-jobs");

                                    data.forEach(job => {

                                       
                                        const jobHTML = `
                        <div  class="job-card">
                            <img src="${job.job_post_logo_url}" alt="${job.company_title} logo" style="width: 60px; height: 60px;"/>
                            <h1 style="font-size: 16px; font-weight: bold;">${job.job_post_title}</h1>
                            <h2 style="font-size: 12px; font-weight: bold;">Company Name: ${job.company_title}</h2>
                            ${job.drive_type === "BB Exclusive" ? `
            <div style="background-color: #8A2BE2; width: 100px; color: #ffffff; padding: 0.25rem 0.5rem; border-radius: 999rem; font-size: 0.75rem; font-weight: 500; display: flex; align-items: center; border: 2px solid gold;">
                <span style="margin-right: 0.25rem; margin-top: -0.25rem; display: flex; align-items: center;">
                    👑 
                </span>
                ${job.drive_type}
            </div>
        ` : `<div style="background-color: #d3d3d3; width: 100px; color: black; padding: 0.25rem 0.5rem; border-radius: 999rem; font-size: 0.75rem; font-weight: 500; display: flex; align-items: center; justify-content:center">
                
                ${job.drive_type}
            </div>`}

                            <p style="font-size: 12px;"><strong>Employment Type:</strong> ${job.employment_type}</p>
                            <p style="font-size: 12px;"><strong>Office Mode:</strong> ${job.office_mode}</p>
                        </div>
                    `;

                                        jobContainer.innerHTML += jobHTML;
                                    });

                                    const jobsContainer = document.getElementById("blackbucks-jobs-container");
                                  

                                    const marquee = document.createElement('marquee');
                                    marquee.style.display = 'block';
                                    marquee.style.whiteSpace = 'nowrap';
                                    marquee.style.overflow = 'hidden';
                                    marquee.style.width = '100%';

                                    data.forEach(job => {
                                        console.log(job);

                                        // Add job post logos to the marquee
                                        const logoImg = document.createElement('img');
                                        logoImg.src = job.job_post_logo_url;
                                        logoImg.alt = `${job.company_title} logo`;
                                        logoImg.style.width = '80px';
                                        logoImg.style.height = '70px';
                                        logoImg.style.margin = '20px';

                                        marquee.appendChild(logoImg);
                                    })

                                    jobsContainer.prepend(marquee)
                                    const header = document.createElement('h1');
                                    header.style.fontSize = '20px';
                                    header.style.marginLeft = '10px'
                                    header.style.marginTop = '10px'
                                    header.textContent = 'Top Companies';
                                    jobsContainer.prepend(header);

                                })
                                .catch(error => {
                                    console.error('Error fetching filter options:', error);
                                });

                            function createJobPostElement(jobPost) {
                                const jobPostElement = document.createElement('div');
                                jobPostElement.className = 'job';
                                jobPostElement.addEventListener('click', function() {
                                updateJobDescription('${jobPost.job_post_id}', '${jobPost.job_post_title}', '${jobPost.company_title}', '${jobPost.description}');
                            });

                                // Function to map employment type to custom text
                                function mapEmploymentType(employmentType) {
                                    switch (employmentType.toLowerCase()) {
                                        case 'fulltime':
                                            return 'Full-Time';
                                        case 'internship':
                                            return 'Internship';
                                        case 'interntohire':
                                            return 'Intern to Hire';
                                        case 'parttime':
                                            return 'Part-Time';
                                        default:
                                            return employmentType; // Use original value if no mapping found
                                    }
                                }

                                // Function to format salary range
                                function formatSalaryRange(salaryRange) {
                                    // Remove ".00" if present
                                    return salaryRange.replace(/\.00/g, '');
                                }
                                // Function to map office mode to custom text
                                function mapOfficeMode(officeMode) {
                                    switch (officeMode.toLowerCase()) {
                                        case 'onsite':
                                            return 'On-site';
                                        case 'hybrid':
                                            return 'Hybrid';
                                        case 'remote':
                                            return 'Remote';
                                        default:
                                            return officeMode; // Use original value if no mapping found
                                    }
                                }

                                jobPostElement.innerHTML = `
                                    <img src="${jobPost.job_post_logo_url}" alt="${jobPost.company_title} logo">
                                    <div class="job-info">
                                        <h2>${jobPost.job_post_title}</h2>
                                        <p>${jobPost.company_title}</p>
                                        ${jobPost.drive_type === "BB Exclusive" ? `
                                            <div style="background-color: #8A2BE2; width: 90px; color: #ffffff; padding: 0.25rem 0.5rem; border-radius: 999rem; font-size: 0.75rem; font-weight: 500; display: flex; align-items: center; border: 2px solid gold;">
                                                <span style="margin-right: 0.25rem; margin-top: -0.25rem; display: flex; align-items: center;">
                                                    👑 
                                                </span>
                                                ${jobPost.drive_type}
                                            </div>
                                        ` : `<div style="background-color: #d3d3d3; width: 90px; color: black; padding: 0.25rem 0.5rem; border-radius: 999rem; font-size: 0.75rem; font-weight: 500; display: flex; align-items: center; justify-content:center">
                                                
                                                ${jobPost.drive_type}
                                            </div>`}
                                        
                                        <ul class="details-list">
                                            <li><i class="fa-solid fa-indian-rupee-sign" style="color: #000000;"></i> ${formatSalaryRange(jobPost.salary_range_or_not_disclosed)}</li>
                                            <li><i class="fa-regular fa-clock" style="color: #000000;"></i> ${mapEmploymentType(jobPost.employment_type)}</li>
                                            <li><i class="fa-regular fa-building" style="color: #000000;"></i> ${mapOfficeMode(jobPost.office_mode)}</li>
                                            <li><i class="fa-regular fa-user" style="color: #000000;"></i> Applications: ${jobPost.drive_count}</li>
                                        </ul>
                                    </div>
                                `;


                                jobPostElement.addEventListener('click', () => {
                                    document.querySelectorAll('.job').forEach(job => job.classList.remove('active'));
                                    jobPostElement.classList.add('active');
                                });

                                return jobPostElement;
                            }




                            window.updateJobDescription = (id, title, company, description) => {
                                const jobDescription = document.querySelector('.job-description');

                                if (!jobDescription) {
                                        console.error('Job description container not found');
                                        return;
                                    }
                                    
                                const body = document.querySelector('body');

                                body.classList.toggle('freeze-scroll');

                                jobDescription.innerHTML = `
                                    <div class="common-buttons" style="display: flex; flex-direction: row;">
                                        <button class="create shortlisted-students-btn" onclick="viewApplications('${id}')" style="cursor: pointer; background-color: #ffffff;">View Applications</button>
                                        <a href="https://admin.hackathon.blackbucks.me/metLeaderboard/">
                                            <button class="create shortlisted-students-btn" style="cursor: pointer; margin-right: 30px;">Shortlist Students</button>
                                        </a>
                                    </div>
                                    <h2>${title}</h2>
                                    <p><strong>Company:</strong> ${company}</p>
                                    <div>${description}</div>
                                    <div class="close-button" onclick="closeJobDescription()">X</div>
                                `;

  



                                jobDescription.style.display = 'block';
                                console.log('Job description:', jobDescription);

                            }

                            window.viewApplications = function (jobPostId) {
                                // Redirect user to another page with job_post_id parameter in the URL
                                window.location.href = `/jobApplications?job_post_id=${jobPostId}`;

                            }

                            window.closeJobDescription = function () {
                                const jobDescription = document.querySelector('.job-description');
                                const body = document.querySelector('body');

                                if (window.innerWidth <= 768) {
                                    body.classList.remove('freeze-scroll');
                                    jobDescription.style.display = 'none';
                                }
                            }

                            function addSearchFunctionality(searchId, filterContainer) {
                                const searchInput = document.getElementById(searchId);
                                searchInput.addEventListener('input', function () {
                                    const filter = searchInput.value.toLowerCase();
                                    const checkboxes = filterContainer.querySelectorAll('div');

                                    checkboxes.forEach(checkbox => {
                                        const label = checkbox.querySelector('label').textContent.toLowerCase();
                                        if (label.includes(filter)) {
                                            checkbox.style.display = '';
                                        } else {
                                            checkbox.style.display = 'none';
                                        }
                                    });
                                });
                            }

                            window.clearAllCheckboxes = function (filterId) {
                                const filterContainer = document.getElementById(filterId);
                                const checkboxes = filterContainer.querySelectorAll('input[type="checkbox"]');
                                checkboxes.forEach(checkbox => {
                                    checkbox.checked = false;
                                });
                                fetchData();
                            }
                        });

                        function toggleJobs() {
                            var div = document.getElementById("blackbucks-jobs-container");
                            if (div.style.display === "none") {
                                div.style.display = "block";
                            } else {
                                div.style.display = "none";
                            }
                        }

                        // Add event listeners to filter labels
                        document.addEventListener('DOMContentLoaded', function () {
                            const filterLabels = document.querySelectorAll('.label-card');
                            filterLabels.forEach(label => {
                                label.addEventListener('click', function () {
                                    const dropdown = this.nextElementSibling;
                                    const isVisible = window.getComputedStyle(dropdown).display !== 'none';

                                    // Hide all dropdown contents first
                                    const allDropdowns = document.querySelectorAll('.dropdown-content');
                                    allDropdowns.forEach(dropdown => {
                                        if (dropdown !== this.nextElementSibling) {
                                            dropdown.style.display = 'none';
                                        }
                                    });

                                    // Toggle the visibility of the clicked dropdown content
                                    dropdown.style.display = isVisible ? 'none' : 'block';
                                });
                            });
                        });
                    </script>



                </div>

                <div id="logoutModal" class="modal" style="display: none;">
                    <div class="modal-content">
                        <p class="question">Are you sure you want to logout?</p>
                        <div class="logout-div"></div>
                        <div class="modal-buttons">
                            <button id="cancelLogout">Cancel</button>
                            <button id="confirmLogout">Yes</button>
                        </div>
                    </div>
                </div>

            </div>
            <div id="logoutModal" class="modal" style="display: none;">
                <div class="modal-content">
                    <p class="question">Are you sure you want to logout?</p>
                    <div class="logout-div"></div>
                    <div class="modal-buttons">
                        <button id="cancelLogout">Cancel</button>
                        <button id="confirmLogout">Yes</button>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <script src="js/job_dashboard.js"></script>
    <!-----------User Details Fetching---------------------->
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Function to get the value of a cookie by name
            function getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            }

            // Get the JWT token from the cookie
            const token = getCookie('userAdminToken');

            if (token) {
                // Decode the JWT token
                const decoded = jwt_decode(token);

                // Display the username and role
                document.querySelector('.userN').textContent = decoded.email;
                document.querySelector('.userR').textContent = decoded.role;
            } else {
                // Handle the case where the token is not found
                document.querySelector('.userN').textContent = 'No user logged in';
                document.querySelector('.userR').textContent = '';
            }
        });
    </script>

    <!---------Logout module----------->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const logoutButton = document.getElementById('logoutButton');
            const logoutModal = document.getElementById('logoutModal');
            const modalContent = logoutModal.querySelector('.modal-content');
            const confirmLogoutButton = modalContent.querySelector('#confirmLogout');
            const cancelLogoutButton = modalContent.querySelector('#cancelLogout');

            logoutButton.addEventListener('click', function (event) {
                event.preventDefault(); // Prevent the default behavior of the button

                // Show the modal
                logoutModal.style.display = 'block';

                // Add event listeners to the modal buttons
                confirmLogoutButton.addEventListener('click', function () {
                    // If user confirms, navigate to /logout
                    window.location.href = '/logout';
                    logoutModal.style.display = 'none'; // Hide the modal
                });

                cancelLogoutButton.addEventListener('click', function () {
                    // If user cancels, hide the modal
                    logoutModal.style.display = 'none';
                });

                // Add event listener to the close span
                closeSpan.addEventListener('click', function () {
                    logoutModal.style.display = 'none'; // Hide the modal
                });

                // Add event listener to the modal itself to close when clicked outside
                window.addEventListener('click', function (event) {
                    if (event.target === logoutModal) {
                        logoutModal.style.display = 'none'; // Hide the modal
                    }
                });
            });
        });
    </script>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>



    

    </div>





    </div>

    </div>



    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        async function fetchJobPostData() {
            try {
                const response = await fetch('api/job_insights/job_post_data');
                const data = await response.json();

                // Extract the necessary data
                const labels = data.monthly_job_post_count.map(item => item.month_year.trim());
                const jobCounts = data.monthly_job_post_count.map(item => item.post_count);

                // Update the chart
                updateChart(labels, jobCounts);
            } catch (error) {
                console.error('Error fetching job post data:', error);
            }
        }

        function updateChart(labels, jobCounts) {
            const canvas = document.getElementById('jobChart');
            const noDataMessage = document.getElementById('noDataMessage');

            if (jobCounts.length === 0) {
                canvas.style.display = 'none';
                noDataMessage.style.display = 'block';
                return;
            }

            const ctx = canvas.getContext('2d');

            const jobChart = new Chart(ctx, {
                type: 'bar', // Defines chart type for the bar datasets
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Applied',
                        data: [30, 60, 50, 80, 70, 90, 85, 70, 50],
                        backgroundColor: '#7962bd',
                        borderColor: '#7962bd',
                        borderWidth: 1,
                        yAxisID: 'y',
                    }, {
                        label: 'Placed',
                        data: [20, 40, 30, 60, 50, 70, 65, 55, 35],
                        backgroundColor: 'rgba(153, 102, 255, 0.6)',
                        borderColor: 'rgba(153, 102, 255, 0.6)',
                        borderWidth: 1,
                        yAxisID: 'y',
                    }, {
                        label: 'Job Count',
                        data: jobCounts,
                        type: 'line', // This dataset is drawn as a line.
                        fill: false,
                        borderColor: '#ff914d',
                        backgroundColor: '#ff914d',
                        borderWidth: 2,
                        yAxisID: 'y',
                    }]
                },
                options: {
                    responsive: false,
                    maintainAspectRatio: false,
                    animation: {
                        duration: 0
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                display: false
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            display: true,
                            position: 'top',
                            clickable: false,
                            labels: {
                                color: 'rgba(0,0,0,0.7)',
                                padding: 15,
                                usePointStyle: true,
                                pointStyle: 'rectRounded'
                            }
                        },
                        tooltip: {
                            enabled: false
                        }
                    },
                    interaction: {
                        mode: 'nearest',
                        intersect: false,
                        enabled: false
                    }
                }
            });
        }




        // Fetch the data and update the chart on page load
        window.onload = fetchJobPostData;
    </script>

    <script>
        // Function to extract details of the first job post and update the job description
        window.addEventListener('DOMContentLoaded', (event) => {
            const firstJob = document.querySelector('.job'); // Select the first job post
            const title = firstJob.querySelector('h2').innerText; // Extract job title
            const company = firstJob.querySelector('p:nth-of-type(1)').innerText; // Extract company name
            const description = firstJob.querySelector('p:nth-of-type(2)').innerText; // Extract job description

            // Call updateJobDescription function with extracted details
            updateJobDescription(title, company, description);
        });



        function addLoadersToSections(sectionIds) {
            sectionIds.forEach(id => {
                const section = document.getElementById(id);
                if (section === "jobChart") {
                    const loader = document.createElement('div');
                    loader.className = 'loader';
                    section.insertAdjacentElement('afterend', loader);
                }
                else if (section) {
                    const loaderContainer = document.createElement('div');
                    loaderContainer.className = 'loader-container';

                    const loader = document.createElement('div');
                    loader.className = 'loader';
                    loaderContainer.appendChild(loader);

                    section.appendChild(loaderContainer);
                }
            });



            // Remove loaders after a certain time (optional)
            window.addEventListener('load', function () {
                setTimeout(function () {
                    sectionIds.forEach(id => {
                        const section = document.getElementById(id);
                        if (section) {
                            const loader = section.querySelector('.loader');
                            if (loader) {
                                loader.style.display = 'none';
                            }
                        }
                    });
                }, 3000); // Adjust the timeout duration as needed
            });
        }

        // IDs of the sections where loaders will be added
        const sectionIds = ['total-job-posts', 'average-job-applications-per-post', 'appliedcount', 'jobChart', 'job-posts-container'];

        // Call the function to add loaders to the sections
        addLoadersToSections(sectionIds);

    </script>




    </div>
</body>

</html>