<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Student Report</title>
  <link rel="shortcut icon" href="img/sidebarlogo.png" type="image/x-icon">
  <link rel="stylesheet" href="css/emp_studentreport.css"> <!-- Linking to external CSS file -->

  <link rel="stylesheet" href="css/nav_log.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto&display=swap">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="icon" type="image/x-icon" href="img/sidebarlogo.png" />
<script src="js/student_report.js"></script>
<script src="https://cdn.jsdelivr.net/npm/jwt-decode/build/jwt-decode.min.js"></script>
<style>
  .loader {
    width: 50px;
    padding: 8px;
    aspect-ratio: 1;
    border-radius: 50%;
    background: #25b09b;
    --_m: 
      conic-gradient(#0000 10%,#000),
      linear-gradient(#000 0 0) content-box;
    -webkit-mask: var(--_m);
            mask: var(--_m);
    -webkit-mask-composite: source-out;
            mask-composite: subtract;
    animation: l3 1s infinite linear;
   
  }
  @keyframes l3 {to{transform: rotate(1turn)}}

  .roww{
    display: flex;
    flex-direction: row;
    align-items: center;
}
.marginr{
    margin-right: 10px;
}
.grey{
    color: rgba(0, 0, 0, 0.7);
}
.f14{
    font-size: 14px;
}
table#bands {
            border-collapse: collapse;
            width: 50%;
        }
        td {
            padding: 5px 8px; /* Adjusted padding */
            vertical-align: middle;
            font-size: 12px; /* Adjust the text size as needed */
            text-align: left;
        }
        th{
            padding: 5px 8px; /* Adjusted padding */
            vertical-align: middle;
            font-size: 14px; /* Adjust the text size as needed */
            text-align: left;
            background-color: #4C4267;
    color: #FFFFFF;
        }
        .points {
            height: 10px;
            width: 10px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 10px;
            margin-left: 5px; /* Adjust the left margin to achieve equal spacing */
        }
        .points-a-plus {
            background-color: #4CAF50; /* A++ */
        }
        .points-a {
            background-color: #FF5733; /* A+ */
        }
        .points-b {
            background-color: #337AFF; /* A */
        }
        .points-c {
            background-color: #FFC300; /* B */
        }
        .points-d {
            background-color: #9C27B0; /* C */
        }
        .column1 {
          padding-left: 30px;
            padding-right: 30px; /* Adjust this value to set the gap between columns */
            width:50%;
        }
        .column2 {
            padding-left: 40px; /* Adjust this value to set the gap between columns */
            width:50%;
        }
</style>

</head>

<body>
  <script>
    window.userRole = "<%= user.role %>";
  </script>
  <script src="js/rolebase.js"></script>
  
  <div class="supercss">
    <div class="sidebar">
      
  
      <% if (user.role === 'EmployabilityAdmin') { %>
        <a class="logo"
        style="text-align: center;align-items:center;padding:5px; padding-bottom: 0; margin-bottom: 0;">
        <img src="img/sidebar logo.png" alt="Logo" style="width: 58px; max-width: 70px;height:80px;">
    </a>
          <a href="employabilityReport" class="menu-item active" style="background-color: #88EB4C;">
              <img src="img/emp_black.png" alt="dash" style="max-width:18px; height:20px">
              <span style="color: black;font-weight:bold">Employability</span>
          </a>
      <% } else if (user.role === 'SuperAdmin') { %>
          <a class="logo"
              style="text-align: center;align-items:center;padding:5px; padding-bottom: 0; margin-bottom: 0;">
              <img src="img/sidebar logo.png" alt="Logo" style="width: 58px; max-width: 70px;height:80px;">
          </a>
          <a href="employabilityReport" class="menu-item" style="background-color: #88EB4C;">
              <img src="img/emp_black.png" alt="dash" style="max-width:18px; height:20px">
              <span style="color: black;font-weight:bold">Employability</span>
          </a>
          <a href="internshipsDashboard" class="menu-item">
              <img src="img/internship_whiteicon.png" alt="manage" style="width: 20px; height: auto">
              <span>Internships</span>
          </a>
      <% } else { %>
        <a class="logo"
        style="text-align: center;align-items:center;padding:5px; padding-bottom: 0; margin-bottom: 0;">
        <img src="img/sidebar logo.png" alt="Logo" style="width: 58px; max-width: 70px;height:80px;">
    </a>
          <a href="myDashboard" class="menu-item" id="dashboard-link">
              <img src="img/dash_white.png" alt="dash" style="max-width:22px; height:22px">
              <span style="color:white">Dashboard</span>
          </a>
          <a href="employabilityReport" class="menu-item" style="background-color: #88EB4C;">
              <img src="img/emp_black.png" alt="dash" style="max-width:18px; height:20px">
              <span style="color: black;font-weight:bold">Employability</span>
          </a>
          <a href="https://admin.hackathon.blackbucks.me" class="menu-item">
              <img alt="Assessment icon" src="img/assessment.png" style="max-width:19px; height:19.5px">
              <span>Assessments</span>
          </a>
          <a href="jobsDashboard" class="menu-item">
              <img src="img/jobs.png" alt="jobs" style="max-width:20px; height:21px">
              <span>Jobs</span>
          </a>
          <a href="https://admin.hackathon.blackbucks.me/createAndManageCourse/" class="menu-item">
              <img alt="course icon" src="img/course.png" style="max-width:19px; height:20px">
              <span>Course</span>
          </a>
          <a href="https://admin.hackathon.blackbucks.me/lessonPlan/" class="menu-item">
              <img alt="lessonplan icon" src="img/lessonplan.png" style="max-width:23px; height:18px">
              <span>Lesson Plan</span>
          </a>
          <a href="trainingsDashboard" class="menu-item">
              <img src="img/trainings.png" alt="trainings" style="max-width:27px; height:21px">
              <span>Trainings</span>
          </a>
          <a href="internshipsDashboard" class="menu-item">
              <img src="img/internship_whiteicon.png" alt="manage" style="width: 20px; height: auto">
              <span>Internships</span>
          </a>
          <a href="https://admin.hackathon.blackbucks.me/createAndManageLabTest/" class="menu-item">
              <img alt="vpl icon" src="img/vpl.png" style="max-width:19px; height:17px">
              <span>VPL</span>
          </a>
      <% } %>
  </div>
     <div class="css">
      <div class="css0">
        <div class="navbar">
         <div class="nav1"></div>
         <div class="nav2">
             <a href="https://admin.hackathon.blackbucks.me/manageStudents/">
                 <div class="chakra-stack css-nr8aow">
                     <img alt="Manage Users" src="img/newManageUsers.svg" class="chakra-image css-0">
                 </div>
             </a>
             <a href="https://admin.hackathon.blackbucks.me/tpCalendar/" style="margin-left: 1rem;">
                 <div class="chakra-stack css-nr8aow">
                     <img alt="Calendar" src="img/newCalenderNavIcon.svg" class="chakra-image css-0"></div></a>
             <a href="https://admin.hackathon.blackbucks.me/manageNotification/" style="margin-left: 1rem;">
                 <div class="chakra-stack css-nr8aow">
                     <div class="css-1edim3w">
                         <img alt="Notifications" src="img/newNotificationIcon.svg" class="chakra-image css-6su6fj">
                         <div class="css-1bac456">
                             <div class="css-1rkwksi">1</div>
                         </div>
                     </div>
                 </div>
             </a>
             <button type="button" class="navbtn" id="userButton">
                 <span class="user-details">
                     <div class="user">
                         <span class="user-profile">
                             <i class="fa-solid fa-circle-user" style="font-size: 30px;"></i>
                         </span>
                         <div class="username">
                             <p class="userN"></p>
                             <p class="userR"></p>
                         </div>
                     </div>
                 </span>
                 <span class="chakra-button__icon css-1hzyiq5">
                     <svg viewBox="0 0 16 16" height="12px" width="12px" aria-hidden="true" focusable="false" fill="currentColor" xmlns="http://www.w3.org/2000/svg" color="black" class="css-1eamic5 ex0cdmw0">
                         <path fill-rule="evenodd" d="M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"></path>
                     </svg>
                 </span>
             </button>
             
             <button type="button" class="logoutbtn" id="logoutButton" style="display: none;">
                 Log out
             </button>
             
            
         </div>
       
 <script>
     document.addEventListener('DOMContentLoaded', () => {
     const userButton = document.getElementById('userButton');
     const logoutButton = document.getElementById('logoutButton');
 
     userButton.addEventListener('click', () => {
         if (logoutButton.style.display === 'none') {
             logoutButton.style.display = 'flex';
             logoutButton.style.top = `${userButton.offsetTop + userButton.offsetHeight}px`;
             logoutButton.style.left = `${userButton.offsetLeft}px`;
         } else {
             logoutButton.style.display = 'none';
         }
     });
 
     logoutButton.addEventListener('click', () => {
         // Add your logout logic here
         console.log('User logged out');
     });
 });
 
 </script>
        </div>
     </div>
     <div class="css1">
      <div class="main-container" style="border:1px solid rgba(0, 0, 0, 0.3)">
        <div class="roww marginr">
            <img src="img/empgrey.png" alt="internship icon" style="width: 14px; height: 14px; margin-right: 5px" />
            <a href="employabilityReport" style="text-decoration: none">
              <p class="grey f14 marginr" style="margin: 0;font-size: 14px">
                Employability Dashboard
                <i class="fa-solid fa-chevron-right f10 marginr grey"></i>
              </p>
            </a>
            <a id="internshipLink" href="#" style="text-decoration: none; color: grey; font-size: 14px">
              <a href="assessmentDashboard" style="text-decoration: none;">
                <p class="grey f14 marginr" style="margin: 0;">
                  Employability Assessments
                  <i class="fa-solid fa-chevron-right f10 marginr grey"></i>
                </p>
              </a>
            </a>
            <a id="domain-link" href="#" style="text-decoration: none;color: rgba(0, 0, 0, 0.7);">
              <p class="f14" style="font-size: 14px"><span id="domain-title"></span><i class="fa-solid fa-chevron-right f10 marginr grey" style="padding-left: 3px;padding-right: 3px;"></i></p>
            </a>
            <a id="studentResultsLink" href="#" style="text-decoration: none; color: grey; font-size: 14px">
              <p class="grey f14 marginr" style="margin: 0;">
                Student Results
                <i class="fa-solid fa-chevron-right f10 marginr grey"></i>
              </p>
            </a>
            <p class="f14"><span id="domain-title"></span> Student Report</p>
          </div>
          
          <script>
            document.addEventListener('DOMContentLoaded', async () => {
              // Get the hackathon ID from the URL
              const urlParams = new URLSearchParams(window.location.search);
              const hackathonId = urlParams.get('id'); // Assuming the URL has a parameter like ?id=123
          
              if (hackathonId) {
                try {
                  // Fetch the hackathon title from the backend
                  const response = await fetch(`api/employability_assessments/hackathon/${hackathonId}`);
                  if (response.ok) {
                    const data = await response.json();
                    const hackathonTitle = data.title;
          
                    // Update the DOM with the fetched title
                    const domainTitleElement = document.getElementById('domain-title');
                    domainTitleElement.textContent = hackathonTitle;
          
                    // Update the link to the assessment report
                    const domainLinkElement = document.getElementById('domain-link');
                    domainLinkElement.href = `assessmentReport?id=${hackathonId}`;
          
                    // Update the link to the student results
                    const studentResultsLinkElement = document.getElementById('studentResultsLink');
                    studentResultsLinkElement.href = `assessmentStudentResults?id=${hackathonId}`;
                  } else {
                    console.error('Failed to fetch hackathon title:', response.statusText);
                  }
                } catch (error) {
                  console.error('Error fetching hackathon title:', error);
                }
              } else {
                console.error('Hackathon ID not found in the URL.');
              }
            });
          </script>
          
  <div class="container">
    <div class="left-card" style="border:1px solid rgba(0, 0, 0, 0.3)">
      <h2 style="text-align: center;">Student Details</h2>
      <img alt="manage" class="circle" id="user_image">
      <p style="text-align: center; font-size: 16px;"><span id="full-name"></span><br><span id="roll-number"></span></p>
      <div class="details">
        <div class="dcard">
         <p>Email:</p>
         <strong><span id="email"></span></strong>
        </div>
        <div class="dcard">
          <p>Phone:</p>
          <strong><span id="phone"></span></strong>
        </div>
        <div class="dcard">
          <p>Reg No:</p>
          <strong><span id="roll-number2"></span></strong>
        </div>
        <div class="dcard">
          <p>Branch:</p>
          <strong><span id="department-name"></span></strong>
        </div>
        <div class="dcard">
          <p>College:</p>
          <strong><span id="college-name"></span></strong>
        </div>
      </div>

      <div class="companies">
        <div class="underline-text">
          <h2 style="text-align: center;justify-content: center;">Chances of Clearing Screening Assessments</h2>
        </div>
      
        <div class="company_cards">

          <div class="ccard">
            <table id="internshipTable1" class="company-table">
                <tbody>
                    <!-- Internship data for card 1 will be dynamically added here -->
                </tbody>
            </table>
        </div>
        <div class="ccard">
            <table id="internshipTable2" class="company-table">
                <tbody>
                    <!-- Internship data for card 2 will be dynamically added here -->
                </tbody>
            </table>
        </div>
        <div class="ccard">
            <table id="internshipTable3" class="company-table">
                <tbody>
                    <!-- Internship data for card 3 will be dynamically added here -->
                </tbody>
            </table>
        </div>
        
        </div>
        <div class="disclaimer">
          <img src="img/warning.png" alt="icon" style="width:30px;height: 30px;" >
          <div class="vertical-line"></div>
          <p>Disclaimer: Subject to Company Eligibility Criteria Based on Your Academic Percentages and Current Job Vacancies Across Companies</p>
        </div>
      </div>
    </div>

    <script>
      // Extract email parameter from the URL
      const urlParams = new URLSearchParams(window.location.search);
      const email = urlParams.get('email');
  
      // Fetch data from backend using the extracted email
      if (email) {
          fetch(`/api/student_report_user/data?email=${encodeURIComponent(email)}`)
              .then(response => response.json())
              .then(data => {
                  // Divide data into three chunks for three cards
                  const chunkSize = Math.ceil(data.length / 3);
                  const chunks = [];
                  for (let i = 0; i < data.length; i += chunkSize) {
                      chunks.push(data.slice(i, i + chunkSize));
                  }
  
                  // Function to generate table rows for a chunk of data
                  const generateTableRows = (internships, tableId) => {
                      const tableBody = document.getElementById(tableId).querySelector('tbody');
                      internships.forEach(internship => {
                          // Set default image URL if the logo is not available
                          const logoSrc = internship.logo ? internship.logo : 'img/tcs.png';
                          const newRow = `
                              <tr>
                                  <td style="padding: 5px; padding-right: 0; text-align: left; font-size: 15px;">
                                    <a href="/company">  <img src="${logoSrc}" alt="Company Logo" style="height: 25px; width: auto"></a>
                                  </td>
                                  <td style="padding: 5px; padding-right: 10px; text-align: left; font-size: 15px;">
                                     <a href="/company"> ${internship.company_name}</a>
                                  </td>
                                  <td style="padding: 5px; padding-right: 10px; text-align: end; font-size: 13px; font-weight: bold;">
                                      ${internship.subdomainsaccuracy === null ? '0%' : `<p>${internship.subdomainsaccuracy}%</p>`}
                                  </td>
                              </tr>
                          `;
                          tableBody.innerHTML += newRow;
                      });
                  };
  
                  // Generate table rows for each chunk of data and distribute among three cards
                  chunks.forEach((chunk, index) => {
                      generateTableRows(chunk, `internshipTable${index + 1}`);
                  });
              })
              .catch(error => console.error('Error fetching internship data:', error));
      } else {
          console.error('Email parameter is missing in the URL.');
      }
  </script>
  
  
  
    <div class="right-card" style="border:1px solid rgba(0, 0, 0, 0.3)">
      <div class="right-content">
        <div class="banner">
          <img src="img/banner1.png" alt="banner">
        </div>

        <!--Employbility Indicators-->
        <div class="emp_indicators">
          <div class="underline-text">
            <h2>Employbility Indicators</h2>
          </div>
          <div class="emp_indi_cards">

            <div class="card">
              <div class="empcontainer">
                <div class="empcolumn">
                  <div class="row">
                    <p class="one">Band</p>
                    <p class="two" ><span id="employability-band"></span></p>
                  
                  </div>
                
                </div>
                
                <div class="empcolumn">
                  <img src="img/empIcon1.png" alt="icon" style="padding-top: 20px;float: right;">
                </div>

                
              </div>
               <p><span style="color: #00b69b;"> <span id="employability-band"></span><span style="color: #606060; font-size: 12px;"><span id="studentno"></span>You hold the <span id="studentrank"></span> position in your college.</span></p>
        
            </div>  

            <script>
              // Extract email parameter from the URL
const urlParams1 = new URLSearchParams(window.location.search);
const email1 = urlParams1.get('email');

// Fetch college rank from backend using the extracted email
if (email) {

    fetch(`/api/student_report_user/student_comment_data/${encodeURIComponent(email1)}`)
        .then(response => response.json())
        .then(data => {
            // Check if data is available
            if (data.length > 0) {
                // Extract college rank from the response
                const collegeRank = data[0].college_rank;

                // Update HTML content with the college rank
                document.getElementById('studentrank').textContent = collegeRank;
            } else {
                console.error('No data found for the given email.');
            }
        })
        .catch(error => console.error('Error fetching college rank:', error));
} else {
    console.error('Email parameter is missing in the URL.');
}

            </script>
          

            <div class="card">
              <div class="empcontainer">
                <div class="empcolumn">
                  <div class="row">
                    <p class="one">Score</p>
                    <p class="two"><span id="total-score"></span><span style="font-size: 14px;">/100</span></p>
                  </div>
                </div>
                <div class="empcolumn">
                  <img src="img/empicon2.png" alt="icon" style="padding-top: 20px; float: right;">
                </div>
              </div>
              <p  style="font-size: 12px;text-align: left;">
                <span id="difference-wrapper" style="color: #00b69b;">
                  <i class="fa-solid fa-arrow-trend-up" id="trend-icon" style="color: #00b69b;"></i>
                  <span id="difference-total-score">-5</span>%
                </span>
                <span style="color: #606060;font-size: 12px;">
                  <span id="updown">Up</span> from batch average
                </span>
              </p>
            </div>
            <script>
              document.addEventListener('DOMContentLoaded', function() {
                var differenceTotalScoreElement = document.getElementById('difference-total-score');
                var differenceTotalScore = parseFloat(differenceTotalScoreElement.innerText);
                var differenceWrapper = document.getElementById('difference-wrapper');
                var trendIcon = document.getElementById('trend-icon');
                var updown = document.getElementById('updown');
            
                // Update the DOM elements based on the score difference
                if (differenceTotalScore < 0) {
                  differenceWrapper.style.color = '#f93c65';
                  trendIcon.style.color = '#f93c65';
                  trendIcon.classList.replace('fa-arrow-trend-up', 'fa-arrow-trend-down');
                  updown.innerText = 'Down';
                } else {
                  differenceWrapper.style.color = '#606060';
                  trendIcon.style.color = '#606060';
                  trendIcon.classList.replace('fa-arrow-trend-down', 'fa-arrow-trend-up');
                  updown.innerText = 'Up';
                }
              });
            </script>
            <div class="card" >
             
             
<table id="bands">
    <tr>
        <th class="column1">Band</th>
        <th class="column2">Description</th>
    </tr>
    <tr>
        <td class="column1"><span ></span>A++</td>
        <td class="column2">12+ LPA</td>
    </tr>
    <tr>
        <td class="column1"><span ></span>A+</td>
        <td class="column2">9-12 LPA</td>
    </tr>
    <tr>
        <td class="column1"><span ></span>A</td>
        <td class="column2">7-9 LPA</td>
    </tr>
    <tr>
        <td class="column1"><span></span>B</td>
        <td class="column2">5-7 LPA</td>
    </tr>
    <tr>
        <td class="column1"><span ></span>C</td>
        <td class="column2">3-5 LPA</td>
    </tr>
    <tr>
      <td class="column1"><span ></span>F</td>
      <td class="column2">0-3 LPA </td>
  </tr>
</table>
            
            
            
            </div>
            <script>
              // Function to generate a random number between 1 and 100
              function getRandomProgress() {
                  return Math.floor(Math.random() * 100) + 1;
              }
      
              // Set the random progress number to the span element
              document.getElementById('progress').textContent = getRandomProgress();
          </script>
          </div>

        </div>

        <!--Results-->
        <div class="results">
          <div class="underline-text">
            <h2>Section Wise Scores</h2>
          </div>
          <div class="disclaimer">
            <img src="img/warning.png" alt="icon" style="width:30px;height: 30px;">
            <div class="vertical-line"></div>
            <p>Disclaimer: The results reflect your performance in the assessment. If you have used the platform in a way that it is not intended, results might not reflect your performance.</p><br>
          </div>
          <p style="font-size: 12px;">**NAN - Not Attempted</p>
          <div class="result_cards">
            <div class="rcard">
                <div class="resultscontainer">
                    <div class="rescolumn">
                        <div class="row">
                            <p class="one">Aptitude</p>
                            <p class="two"><span id="aptitude"></span>%</p>
                        </div>
                    </div>
                    <div class="rescolumn">
                        <img src="img/resicon1.png" alt="icon" style="padding-top: 20px;float: right;">
                    </div>
                </div>
                <a href="https://taptap.blackbucks.me/lessonPlan/?lessonPlanId=98" style="text-decoration: none;"><div class="rrcard" style="background-color: #f1f1fc;">
                    <p class="suggestion-title" style="color:#00006c; font-size: 14px;">Suggestion:</p>
                    <p class="sug"><span id="aptitude-suggestions"></span></p>
                </div></a>
                <p id="aptitude-diff-text" style="font-size: 14px;float: left;">
                    <span id="aptitude-icon-text">
                        <i id="aptitude-icon" class="fa-solid fa-arrow-trend-down"></i>
                        <span id="difference-aptitude">-5</span>%
                    </span>
                    <span style="color: #606060;"><span id="aptitude-upanddown">Down</span> from batch average</span>
                </p>
            </div>
            <div class="rcard">
                <div class="resultscontainer">
                    <div class="rescolumn">
                        <div class="row">
                            <p class="one">Verbal</p>
                            <p class="two"><span id="english"></span>%</p>
                        </div>
                    </div>
                    <div class="rescolumn">
                        <img src="img/resicon2.png" alt="icon" style="padding-top: 20px;float: right;">
                    </div>
                </div>
                <a href="https://taptap.blackbucks.me/lessonPlan/?lessonPlanId=98" style="text-decoration: none;"><div class="rrcard" style="background-color: #ffeae2;">
                    <p class="suggestion-title" style="color:#00006c; font-size: 14px;">Suggestion:</p>
                    <p class="sug"><span id="english-suggestions"></span></p>
                </div></a>
                <p id="english-diff-text" style="font-size: 14px;float: left;">
                    <span id="english-icon-text">
                        <i id="english-icon" class="fa-solid fa-arrow-trend-up"></i>
                        <span id="difference-english">10</span>%
                    </span>
                    <span style="color: #606060;"><span id="english-upanddown">Up</span> from batch average</span>
                </p>
            </div>
            <div class="rcard">
                <div class="resultscontainer">
                    <div class="rescolumn">
                        <div class="row">
                            <p class="one">Coding</p>
                            <p class="two"><span id="coding"></span>%</p>
                        </div>
                    </div>
                    <div class="rescolumn">
                        <img src="img/resicon3.png" alt="icon" style="padding-top: 20px;float: right;">
                    </div>
                </div>
                <a href="https://taptap.blackbucks.me/lessonPlan/?lessonPlanId=98" style="text-decoration: none;"><div class="rrcard" style="background-color: #e9f3ff;">
                    <p class="suggestion-title" style="color:#00006c; font-size: 14px;">Suggestion:</p>
                    <p class="sug"><span id="technical-suggestions"></span></p>
                </div></a>
                <p id="coding-diff-text" style="font-size: 14px;float: left;">
                    <span id="coding-icon-text">
                        <i id="coding-icon" class="fa-solid fa-arrow-trend-up"></i>
                        <span id="difference-coding">3</span>%
                    </span>
                    <span style="color: #606060;"><span id="coding-upanddown">Up</span> from batch average</span>
                </p>
            </div>
        </div>
        
        <script>
            function updateColor(id, value, iconId, updownId) {
                const iconTextElement = document.getElementById(id);
                const icon = document.getElementById(iconId);
                const text = iconTextElement.querySelector('span');
                const updownElement = document.getElementById(updownId);
        
                if (value < 0) {
                    icon.className = "fa-solid fa-arrow-trend-up";
                    icon.style.color = '#00b69b';
                    text.style.color = '#00b69b';
                    iconTextElement.style.color = '#00b69b';
                    updownElement.textContent = "Up";
                } else {
                    icon.className = "fa-solid fa-arrow-trend-down";
                    icon.style.color = '#f93c65';
                    text.style.color = '#f93c65';
                    iconTextElement.style.color = '#f93c65';
                    updownElement.textContent = "Down";
                }
        
                // Update the text content to remove negative symbol after applying the logic
                text.textContent = Math.abs(value).toString();
            }
        
            function updateAllColors() {
                const aptitudeValue = parseFloat(document.getElementById('difference-aptitude').textContent);
                const englishValue = parseFloat(document.getElementById('difference-english').textContent);
                const codingValue = parseFloat(document.getElementById('difference-coding').textContent);
        
                updateColor('aptitude-icon-text', aptitudeValue, 'aptitude-icon', 'aptitude-upanddown');
                updateColor('english-icon-text', englishValue, 'english-icon', 'english-upanddown');
                updateColor('coding-icon-text', codingValue, 'coding-icon', 'coding-upanddown');
            }
        
            document.addEventListener('DOMContentLoaded', updateAllColors);
        </script>
        
        

        
          

        </div>

        <!--Results-->
       

        <!--General Advice-->

        <div class="advice">
          <div class="underline-text">
            <h2>General Advice</h2>
          </div>

          <div class="advicecard">
            <div class="acard">
              <img src="img/advice.png" alt="icon">
              <p><span id="comment"></span></p>
            </div>
          </div>

          <div class="advice-container">
            <div class="column">
              <a href="https://taptap.blackbucks.me/?assessmentType=myCollege&studentAssessmentTabIndex=1" class="aacard-link">
                <div class="aacard">
                    <div class="acontent">
                        <div style="padding-right:20px">
                            <img src="img/project.png" alt="icon" style="height: auto;width: 50px;">
                        </div>
                        <div>
                            <p class="aheading">Project</p>
                            <p class="amatter">Give special emphasis on the Academic Project</p>
                        </div>
                    </div>
                </div>
            </a>
              <a href="https://taptap.blackbucks.me/?assessmentType=gestSuite&studentAssessmentTabIndex=3" style="text-decoration: none; color: inherit;">
              <div class="aacard">
                    <div class="acontent" style="display: flex; align-items: center;">
                        <div style="padding-right: 20px;">
                            <img src="img/skill.png" alt="icon">
                        </div>
                        <div>
                            <p class="aheading">Rate Your Skill</p>
                            <p class="amatter">Complete skill tests in taptap and verify your skills </p>
                        </div>
                    </div>
            </div>
          </a>
            
              <a href="https://taptap.blackbucks.me/?assessmentType=practice" style="text-decoration: none; color: inherit;">
                <div class="aacard">
                  <div class="acontent">
                    <div style="padding-right:20px"><img src="img/test.png" alt="icon"></div>
                    <div>
                      <p class="aheading">Attempt PGEST</p>
                      <p class="amatter">Take Monthly Employability Test on TapTap every month</p>
                    </div>
                  </div>
                </div>
              </a>
              
            </div>
            <div class="column">
              <a href="https://taptap.blackbucks.me/myprofile/" class="aacard-link">
                <div class="aacard">
                    <div class="acontent">
                        <div style="padding-right:20px">
                            <img src="img/resume.png" alt="icon" style="height: auto;width: 50px;">
                        </div>
                        <div>
                            <p class="aheading">Complete Resume</p>
                            <p class="amatter">Complete your profile & Generate your resume</p>
                        </div>
                    </div>
                </div>
            </a>
            
              <div class="aacard">
                <div class="acontent">
                  <div style="padding-right:20px"><img src="img/maintain.png" alt="icon"  style="height: auto;width: 50px;"></div>
                  <div>
                  <p class="aheading">Academic Standards</p>
                  <p class="amatter">Maintain 60% and more in your academics</p>
                </div>
                </div>
              </div>
              <a href="https://taptap.blackbucks.me/?assessmentType=learn&studentAssessmentTabIndex=1" class="aacard-link">
                <div class="aacard">
                    <div class="acontent">
                        <div style="padding-right:20px">
                            <img src="img/certificate.png" alt="icon" style="height: auto;width: 50px;">
                        </div>
                        <div>
                            <p class="aheading">Get Certified</p>
                            <p class="amatter">Complete a certification</p>
                        </div>
                    </div>
                </div>
            </a>
            
            </div>
          </div>
        </div>
      </div>

    </div>
  </div></div>
  <div id="logoutModal" class="modal" style="display: none;">
    <div class="modal-content">
        <p class="question">Are you sure you want to logout?</p>
        <div class="logout-div"></div>
        <div class="modal-buttons">
            <button id="cancelLogout">Cancel</button>
            <button id="confirmLogout">Yes</button>
        </div>
    </div>
</div>
</div>
</div>
</div>

  <script>
     function addLoadersToSections(sectionIds) {
    sectionIds.forEach(id => {
        const section = document.getElementById(id);
        if (section) {
            const loader = document.createElement('div');
            loader.className = 'loader';
            section.appendChild(loader);
        }
    });

    // Remove loaders after a certain time (optional)
    window.addEventListener('load', function() {
        setTimeout(function() {
            sectionIds.forEach(id => {
                const section = document.getElementById(id);
                if (section) {
                    const loader = section.querySelector('.loader');
                    if (loader) {
                        loader.style.display = 'none';
                    }
                }
            });
        }, 3000); // Adjust the timeout duration as needed
    });
}

// IDs of the sections where loaders will be added
const sectionIds = ['user_image', 'full-name', 'email', 'phone', 'college-name' , 'department-name', 'roll-number', 'roll-number2' , 'aptitude' , 'english' , 'coding', 'employability-band' , 'total-score' , 'comment' , 'aptitude-suggestions' , 'english-suggestions' , 'technical-suggestions' , 'difference-aptitude' , 'difference-english' , 'difference-coding' , 'difference-total-score'];

// Call the function to add loaders to the sections
addLoadersToSections(sectionIds);
  </script>

  <!-----------User Details Fetching---------------------->
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Function to get the value of a cookie by name
    function getCookie(name) {
      const value = `; ${document.cookie}`;
      const parts = value.split(`; ${name}=`);
      if (parts.length === 2) return parts.pop().split(';').shift();
    }

    // Get the JWT token from the cookie
    const token = getCookie('userAdminToken');
    
    if (token) {
      // Decode the JWT token
      const decoded = jwt_decode(token);
      
      // Display the username and role
      document.querySelector('.userN').textContent = decoded.email;
      document.querySelector('.userR').textContent = decoded.role;
    } else {
      // Handle the case where the token is not found
      document.querySelector('.userN').textContent = 'No user logged in';
      document.querySelector('.userR').textContent = '';
    }
  });
</script>

 <!---------Logout module----------->
 <script>
  document.addEventListener('DOMContentLoaded', function() {
      const logoutButton = document.getElementById('logoutButton');
      const logoutModal = document.getElementById('logoutModal');
      const modalContent = logoutModal.querySelector('.modal-content');
      const confirmLogoutButton = modalContent.querySelector('#confirmLogout');
      const cancelLogoutButton = modalContent.querySelector('#cancelLogout');

      logoutButton.addEventListener('click', function(event) {
          event.preventDefault(); // Prevent the default behavior of the button

          // Show the modal
          logoutModal.style.display = 'block';

          // Add event listeners to the modal buttons
          confirmLogoutButton.addEventListener('click', function() {
              // If user confirms, navigate to /logout
              window.location.href = '/logout';
              logoutModal.style.display = 'none'; // Hide the modal
          });

          cancelLogoutButton.addEventListener('click', function() {
              // If user cancels, hide the modal
              logoutModal.style.display = 'none';
          });

          // Add event listener to the close span
          closeSpan.addEventListener('click', function() {
              logoutModal.style.display = 'none'; // Hide the modal
          });

          // Add event listener to the modal itself to close when clicked outside
          window.addEventListener('click', function(event) {
              if (event.target === logoutModal) {
                  logoutModal.style.display = 'none'; // Hide the modal
              }
          });
      });
  });
</script>
</body>

</html>